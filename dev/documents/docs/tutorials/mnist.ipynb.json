{"attributes":{"backlinks":[{"tag":"document","title":"toc","docid":"documents/toc.md"},{"tag":"document","title":"Getting started","docid":"documents/docs/overview.md"}],"path":"/home/runner/.julia/packages/FluxTraining/FErTB/docs/tutorials/mnist.ipynb","title":"Training an image classifier"},"tag":"document","children":[{"attributes":{},"tag":"h1","children":[{"mimes":{"text/plain":"Training an image classifier"}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Let"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"s put "}},{"attributes":{},"tag":"em","children":[{"mimes":{"text/plain":"FluxTraining"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"jl"}}]},{"mimes":{"text/plain":" to train a model on the MNIST dataset"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"MNIST is simple enough that we can focus on the part where "}},{"attributes":{},"tag":"em","children":[{"mimes":{"text/plain":"FluxTraining"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"jl"}}]},{"mimes":{"text/plain":" comes in, the training"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" If you want to see examples of using FluxTraining"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"jl on larger datasets, see the documentation of "}},{"attributes":{"href":"https://github.com/FluxML/FastAI.jl","title":""},"tag":"a","children":[{"mimes":{"text/plain":"FastAI"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"jl"}}]},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"h2","children":[{"mimes":{"text/plain":"Setup"}}]},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"em","children":[{"mimes":{"text/plain":"If you want to run this tutorial yourself, you can find the notebook file "}},{"attributes":{"href":"https://github.com/lorenzoh/FluxTraining.jl/blob/master/docs/tutorials/mnist.ipynb","title":""},"tag":"a","children":[{"mimes":{"text/plain":"here"}}]}]},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"To make data loading and batching a bit easier, we"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"ll install some additional dependencies:"}}]},{"attributes":{"lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"CST_DEFINITION","children":[{"attributes":{},"tag":"CST_toplevel","children":[{"attributes":{},"tag":"CST_using","children":[{"attributes":{},"tag":"CST_span","children":[{"attributes":{},"tag":"CST_KEYWORD","children":[{"mimes":{"text/plain":"using"}}]},{"attributes":{},"tag":"CST_whitespace","children":[{"mimes":{"text/plain":" "}}]}]},{"attributes":{},"tag":"CST_OPERATOR","children":[{"attributes":{},"tag":"CST_span","children":[{"attributes":{},"tag":"CST_IDENTIFIER","children":[{"mimes":{"text/plain":"Pkg;"}}]},{"attributes":{},"tag":"CST_whitespace","children":[{"mimes":{"text/plain":" "}}]}]}]}]},{"attributes":{},"tag":"CST_call","children":[{"attributes":{},"tag":"CST_OPERATOR","children":[{"attributes":{},"tag":"CST_IDENTIFIER","children":[{"mimes":{"text/plain":"Pkg"}}]},{"attributes":{},"tag":"CST_OPERATOR","children":[{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"CST_quotenode","children":[{"attributes":{},"tag":"CST_IDENTIFIER","children":[{"mimes":{"text/plain":"add"}}]}]}]},{"attributes":{},"tag":"CST_BRACKET","children":[{"mimes":{"text/plain":"("}}]},{"attributes":{},"tag":"CST_vect","children":[{"attributes":{},"tag":"CST_BRACKET","children":[{"mimes":{"text/plain":"["}}]},{"attributes":{},"tag":"CST_STRING","children":[{"mimes":{"text/plain":"\"MLDataPattern\""}}]},{"attributes":{},"tag":"CST_PUNCTUATION","children":[{"mimes":{"text/plain":", "}}]},{"attributes":{},"tag":"CST_STRING","children":[{"mimes":{"text/plain":"\"DataLoaders\""}}]},{"attributes":{},"tag":"CST_BRACKET","children":[{"mimes":{"text/plain":"]"}}]}]},{"attributes":{},"tag":"CST_BRACKET","children":[{"mimes":{"text/plain":")"}}]}]}]}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Now we can import everything we"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"ll need"}},{"mimes":{"text/plain":"."}}]},{"attributes":{"lang":"julia"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"using DataLoaders: DataLoader\nusing MLDataPattern: splitobs\nusing Flux\nusing FluxTraining"}}]}]},{"attributes":{},"tag":"h2","children":[{"mimes":{"text/plain":"Overview"}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"There are 4 pieces that you always need to construct and train a "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Learner"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Learner"}}]}]},{"mimes":{"text/plain":":"}}]},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"a model"}}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"data"}}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"an optimizer; and"}}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"a loss function"}}]}]}]},{"attributes":{},"tag":"h2","children":[{"mimes":{"text/plain":"Building a "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Learner"}}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Let"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"s look at the "}},{"attributes":{},"tag":"strong","children":[{"mimes":{"text/plain":"data"}}]},{"mimes":{"text/plain":" first"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"em","children":[{"mimes":{"text/plain":"FluxTraining"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"jl"}}]},{"mimes":{"text/plain":" is agnostic of the data source"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" The only requirements are:"}}]},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"it is iterable and each iteration returns a tuple "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"(xs, ys)"}}]}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"the model can take in "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"xs"}}]},{"mimes":{"text/plain":", i"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"e"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"model(xs)"}}]},{"mimes":{"text/plain":" works; and"}}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"the loss function can take model outputs and "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"ys"}}]},{"mimes":{"text/plain":", i"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"e"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"lossfn(model(xs), ys)"}}]},{"mimes":{"text/plain":" returns a scalar"}}]}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Glossing over the details as it"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"s not the focus of this tutorial, here"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"s the code for getting a data iterator of the MNIST dataset"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" We use "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"DataLoaders.DataLoader"}}]},{"mimes":{"text/plain":" to create an iterator of batches from our dataset"}},{"mimes":{"text/plain":"."}}]},{"attributes":{"lang":"julia"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"xs, ys = (\n    # convert each image into h*w*1 array of floats \n    [Float32.(reshape(img, 28, 28, 1)) for img in Flux.Data.MNIST.images()],\n    # one-hot encode the labels\n    [Float32.(Flux.onehot(y, 0:9)) for y in Flux.Data.MNIST.labels()],\n)\n\n# split into training and validation sets\ntraindata, valdata = splitobs((xs, ys))\n\n# create iterators\ntrainiter, valiter = DataLoader(traindata, 128, buffered=false), DataLoader(valdata, 256, buffered=false);"}}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Next, let"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"s create a simple "}},{"attributes":{},"tag":"em","children":[{"mimes":{"text/plain":"Flux"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":"jl"}}]},{"mimes":{"text/plain":" "}},{"attributes":{},"tag":"strong","children":[{"mimes":{"text/plain":"model"}}]},{"mimes":{"text/plain":" that we"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"ll train to classify the MNIST digits"}},{"mimes":{"text/plain":"."}}]},{"attributes":{"lang":"julia"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"model = Chain(\n    Conv((3, 3), 1 => 16, relu, pad = 1, stride = 2),\n    Conv((3, 3), 16 => 32, relu, pad = 1),\n    GlobalMeanPool(),\n    Flux.flatten,\n    Dense(32, 10),\n)"}}]}]},{"mimes":{"text/plain":""}},{"attributes":{"class":"coderesult"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Chain(Conv((3, 3), 1=>16, relu), Conv((3, 3), 16=>32, relu), GlobalMeanPool(), flatten, Dense(32, 10))"}}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"We"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"ll use "}},{"attributes":{},"tag":"em","children":[{"mimes":{"text/plain":"categorical cross entropy"}}]},{"mimes":{"text/plain":" as a "}},{"attributes":{},"tag":"strong","children":[{"mimes":{"text/plain":"loss function"}}]},{"mimes":{"text/plain":" and "}},{"attributes":{},"tag":"em","children":[{"mimes":{"text/plain":"ADAM"}}]},{"mimes":{"text/plain":" as an "}},{"attributes":{},"tag":"strong","children":[{"mimes":{"text/plain":"optimizer"}}]},{"mimes":{"text/plain":"."}}]},{"attributes":{"lang":"julia"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"lossfn = Flux.Losses.logitcrossentropy\noptim = Flux.ADAM();"}}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Now we"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"re ready to create a "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Learner"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Learner"}}]}]},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" At this point you can also add any callbacks, like "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.ToGPU"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"ToGPU"}}]}]},{"mimes":{"text/plain":" to run the training on your GPU if you have one available"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" Some callbacks are also "}},{"attributes":{"reftype":"document","href":"../callbacks/reference.md","title":"","document_id":"documents/docs/callbacks/reference.md"},"tag":"reference","children":[{"mimes":{"text/plain":"included by default"}}]},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Since we"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"re classifying digits, we also use the "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Metrics"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Metrics"}}]}]},{"mimes":{"text/plain":" callback to track the accuracy of the model"}},{"mimes":{"text/plain":"’"}},{"mimes":{"text/plain":"s predictions:"}}]},{"attributes":{"lang":"julia"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"learner = Learner(model, (trainiter, valiter), optim, lossfn, Metrics(accuracy))"}}]}]},{"mimes":{"text/plain":""}},{"attributes":{"class":"coderesult"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Learner()"}}]}]},{"attributes":{},"tag":"h2","children":[{"mimes":{"text/plain":"Training"}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"With a "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Learner"}}]},{"mimes":{"text/plain":" inplace, training is as simple as calling "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.fit!"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"fit!"}}]}]},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"(learner, nepochs)"}}]},{"mimes":{"text/plain":"."}}]},{"attributes":{"lang":"julia"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"FluxTraining.fit!(learner, 10)"}}]}]},{"attributes":{"class":"codeoutput"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"\u001b[32mEpoch 1 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:46\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   1.0 │ 2.04939 │  0.25204 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 1 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   1.0 │ 1.70353 │   0.3821 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 2 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:19\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   2.0 │ 1.58615 │  0.44849 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 2 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   2.0 │ 1.44792 │  0.50544 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 3 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:18\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   3.0 │ 1.36495 │  0.57273 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 3 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   3.0 │ 1.25941 │  0.59525 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 4 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:20\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   4.0 │ 1.18935 │  0.64891 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 4 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m   Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼────────┼──────────┤\n│ ValidationPhase │   4.0 │ 1.1076 │  0.66347 │\n└─────────────────┴───────┴────────┴──────────┘\n\u001b[32mEpoch 5 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:19\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   5.0 │ 1.05506 │  0.69386 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 5 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   5.0 │ 0.99203 │  0.70275 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 6 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:18\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   6.0 │ 0.95282 │  0.72533 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 6 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   6.0 │ 0.90209 │  0.73058 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 7 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:19\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   7.0 │ 0.87621 │  0.74563 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 7 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   7.0 │ 0.83402 │  0.74781 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 8 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:18\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   8.0 │ 0.81399 │  0.76282 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 8 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   8.0 │ 0.77623 │  0.76568 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 9 TrainingPhase(): 100%|██████████████████████████| Time: 0:00:18\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │   9.0 │ 0.76236 │  0.77835 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 9 ValidationPhase(): 100%|████████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │   9.0 │ 0.72606 │  0.78079 │\n└─────────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 10 TrainingPhase(): 100%|█████████████████████████| Time: 0:00:18\u001b[39m\n┌───────────────┬───────┬─────────┬──────────┐\n│\u001b[1m         Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├───────────────┼───────┼─────────┼──────────┤\n│ TrainingPhase │  10.0 │ 0.71684 │  0.79175 │\n└───────────────┴───────┴─────────┴──────────┘\n\u001b[32mEpoch 10 ValidationPhase(): 100%|███████████████████████| Time: 0:00:02\u001b[39m\n┌─────────────────┬───────┬─────────┬──────────┐\n│\u001b[1m           Phase \u001b[0m│\u001b[1m Epoch \u001b[0m│\u001b[1m    Loss \u001b[0m│\u001b[1m Accuracy \u001b[0m│\n├─────────────────┼───────┼─────────┼──────────┤\n│ ValidationPhase │  10.0 │ 0.68353 │  0.79449 │\n└─────────────────┴───────┴─────────┴──────────┘\n"}}]}]},{"attributes":{"class":"coderesult"},"tag":"pre","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Learner()"}}]}]}]}