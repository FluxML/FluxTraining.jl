{"attributes":{"kind":"function","backlinks":[{"tag":"sourcefile","title":"FluxTraining/src/learner.jl","docid":"sourcefiles/FluxTraining/src/learner.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/graph.jl","docid":"sourcefiles/FluxTraining/src/callbacks/graph.jl"}],"methods":[{"line":13,"file":"/home/runner/.julia/packages/FluxTraining/RVSKd/src/callbacks/graph.jl","method_id":"FluxTraining.callbackgraph_1","symbol_id":"FluxTraining.callbackgraph","filedoc":"sourcefiles/FluxTraining/src/callbacks/graph.jl","signature":"callbackgraph(callbacks)"}],"name":"callbackgraph","title":"callbackgraph","symbol_id":"FluxTraining.callbackgraph","public":false,"module_id":"FluxTraining"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["callbackgraph(callbacks) -> SimpleDiGraph\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Creates a directed acyclic graph from a list of ",{"attributes":{},"tag":"code","children":["callbacks"],"type":"node"},". Ordering is given through ",{"attributes":{},"tag":"code","children":["runafter"],"type":"node"}," and ",{"attributes":{},"tag":"code","children":["resolveconflict"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["If a write conflict cannot be resolved (i.e. ",{"attributes":{},"tag":"code","children":["resolveconflict"],"type":"node"},") is not implemented), throws an error."],"type":"node"}],"type":"node"}],"type":"node"}