{"attributes":{"kind":"abstract type","backlinks":[{"tag":"sourcefile","title":"FluxTraining/src/callbacks/custom.jl","docid":"sourcefiles/FluxTraining/src/callbacks/custom.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/callback.jl","docid":"sourcefiles/FluxTraining/src/callbacks/callback.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/scheduler.jl","docid":"sourcefiles/FluxTraining/src/callbacks/scheduler.jl"},{"tag":"documentation","title":"MetricsPrinter","docid":"references/FluxTraining.MetricsPrinter"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/metrics.jl","docid":"sourcefiles/FluxTraining/src/callbacks/metrics.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/callbacks.jl","docid":"sourcefiles/FluxTraining/src/callbacks/callbacks.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/logging/checkpointer.jl","docid":"sourcefiles/FluxTraining/src/callbacks/logging/checkpointer.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/logging/logger.jl","docid":"sourcefiles/FluxTraining/src/callbacks/logging/logger.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbackutils.jl","docid":"sourcefiles/FluxTraining/src/callbackutils.jl"},{"tag":"documentation","title":"ToDevice","docid":"references/FluxTraining.ToDevice"},{"tag":"documentation","title":"LogHistograms","docid":"references/FluxTraining.LogHistograms"},{"tag":"document","title":"Custom callbacks","docid":"documents/docs/callbacks/custom.md"},{"tag":"documentation","title":"on","docid":"references/FluxTraining.on"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/earlystopping.jl","docid":"sourcefiles/FluxTraining/src/callbacks/earlystopping.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/sanitycheck.jl","docid":"sourcefiles/FluxTraining/src/callbacks/sanitycheck.jl"},{"tag":"documentation","title":"LogMetrics","docid":"references/FluxTraining.LogMetrics"},{"tag":"documentation","title":"Metrics","docid":"references/FluxTraining.Metrics"},{"tag":"documentation","title":"ConditionalCallback","docid":"references/FluxTraining.ConditionalCallback"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/conditional.jl","docid":"sourcefiles/FluxTraining/src/callbacks/conditional.jl"},{"tag":"documentation","title":"LogHyperParams","docid":"references/FluxTraining.LogHyperParams"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/recorder.jl","docid":"sourcefiles/FluxTraining/src/callbacks/recorder.jl"},{"tag":"document","title":"Callback reference","docid":"documents/docs/callbacks/reference.md"},{"tag":"documentation","title":"Phase","docid":"references/FluxTraining.Phases.Phase"},{"tag":"document","title":"Training loop API reference","docid":"documents/docs/reference/training.md"},{"tag":"documentation","title":"CustomCallback","docid":"references/FluxTraining.CustomCallback"},{"tag":"sourcefile","title":"FluxTraining/src/learner.jl","docid":"sourcefiles/FluxTraining/src/learner.jl"},{"tag":"document","title":"How to use callbacks","docid":"documents/docs/callbacks/usage.md"}],"methods":[],"name":"Callback","title":"Callback","symbol_id":"FluxTraining.Callback","public":false,"module_id":"FluxTraining"},"tag":"documentation","children":[{"attributes":{},"tag":"body","children":[{"attributes":{"lang":""},"tag":"codeblock","children":[{"attributes":{},"tag":"CST_DEFINITION","children":[{"attributes":{},"tag":"CST_abstract","children":[{"attributes":{},"tag":"CST_span","children":[{"attributes":{},"tag":"CST_KEYWORD","children":[{"mimes":{"text/plain":"abstract"}}]},{"attributes":{},"tag":"CST_whitespace","children":[{"mimes":{"text/plain":" "}}]}]},{"attributes":{},"tag":"CST_span","children":[{"attributes":{},"tag":"CST_KEYWORD","children":[{"mimes":{"text/plain":"type"}}]},{"attributes":{},"tag":"CST_whitespace","children":[{"mimes":{"text/plain":" "}}]}]},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Callback"},"tag":"reference","children":[{"mimes":{"text/plain":"Callback"}}]},{"attributes":{},"tag":"CST_errortoken","children":[{"attributes":{},"tag":"CST_KEYWORD","children":[{"mimes":{"text/plain":"k"}}]}]}]}]}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Supertype of all callbacks"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" Callbacks add custom functionality to"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"the training loop by hooking into different "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Events.Event"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Events.Event"}}]}]},{"mimes":{"text/plain":"s"}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Any "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Callback"}}]},{"mimes":{"text/plain":" can be used by passing it to "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Learner"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Learner"}}]}]},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" See"}},{"attributes":{},"tag":"br","children":[]},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"subtypes(FluxTraining.Callback)"}}]},{"mimes":{"text/plain":" for implementations"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"h2","children":[{"mimes":{"text/plain":"Extending"}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"See "}},{"attributes":{"reftype":"document","href":"/documents/docs/callbacks/custom.md","title":"","document_id":"documents/docs/callbacks/custom.md"},"tag":"reference","children":[{"mimes":{"text/plain":"Custom callbacks"}}]},{"mimes":{"text/plain":" for a less"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"succinct tutorial format"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"ul","children":[{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Create a "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"struct MyCallback"}}]},{"mimes":{"text/plain":" that subtypes "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"FluxTraining.Callback"}}]},{"mimes":{"text/plain":"."}}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Add event handlers by implementing methods for"}},{"attributes":{},"tag":"br","children":[]},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.on"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"on"}}]}]},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"(event, phase, callback, learner)"}}]},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" Methods should always"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"dispatch on your callback, and may dispatch on specific "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Phases.Phase"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Phases.Phase"}}]}]},{"mimes":{"text/plain":"s"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"and "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.Events.Event"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"Events.Event"}}]}]},{"mimes":{"text/plain":"s"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"For example, to implement an event handler that runs at the end of every"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"step during training: "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"on(::StepEnd, ::AbstractTrainingPhase, ::MyCallback, learner)"}}]},{"mimes":{"text/plain":"."}}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"Define what state the callback accesses and/or modifies by implementing"}},{"attributes":{},"tag":"br","children":[]},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.stateaccess"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"stateaccess"}}]}]},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"(::MyCallback)"}}]},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" While "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"learner"}}]},{"mimes":{"text/plain":" is always passed as an"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"argument to "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"on"}}]},{"mimes":{"text/plain":" event handlers, by default a callback can not read or write"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"to its fields"}},{"mimes":{"text/plain":"."}},{"mimes":{"text/plain":" See "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.stateaccess"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"stateaccess"}}]}]},{"mimes":{"text/plain":" for more detail"}},{"mimes":{"text/plain":"."}}]},{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"If a callback needs to write some state that other callbacks should be able"}},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"to access, it can store it in "}},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"learner.cbstate"}}]},{"mimes":{"text/plain":" if you add a permission in"}},{"attributes":{},"tag":"br","children":[]},{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"stateaccess"}}]},{"mimes":{"text/plain":"."}}]}]},{"attributes":{},"tag":"li","children":[{"attributes":{},"tag":"p","children":[{"mimes":{"text/plain":"If the callback needs some one"}},{"mimes":{"text/plain":"-"}},{"mimes":{"text/plain":"time initialization, you can implement "}},{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.init!"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":[{"mimes":{"text/plain":"init!"}}]}]},{"attributes":{},"tag":"br","children":[]},{"mimes":{"text/plain":"which will be run at least once before any step is run"}},{"mimes":{"text/plain":"."}}]}]}]}]}]}