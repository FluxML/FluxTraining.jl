{"attributes":{"kind":"function","backlinks":[{"tag":"document","title":"News","docid":"documents/CHANGELOG.md"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/scheduler.jl","docid":"sourcefiles/FluxTraining/src/callbacks/scheduler.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/metrics.jl","docid":"sourcefiles/FluxTraining/src/callbacks/metrics.jl"},{"tag":"documentation","title":"Callback","docid":"references/FluxTraining.Callback"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/recorder.jl","docid":"sourcefiles/FluxTraining/src/callbacks/recorder.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbackutils.jl","docid":"sourcefiles/FluxTraining/src/callbackutils.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/callback.jl","docid":"sourcefiles/FluxTraining/src/callbacks/callback.jl"},{"tag":"sourcefile","title":"FluxTraining/src/learner.jl","docid":"sourcefiles/FluxTraining/src/learner.jl"},{"tag":"sourcefile","title":"FluxTraining/src/callbacks/conditional.jl","docid":"sourcefiles/FluxTraining/src/callbacks/conditional.jl"}],"methods":[{"line":64,"file":"/home/runner/.julia/packages/FluxTraining/euBHk/src/callbacks/conditional.jl","method_id":"FluxTraining.init!_1","symbol_id":"FluxTraining.init!","filedoc":"sourcefiles/FluxTraining/src/callbacks/conditional.jl","signature":"init!(cc::ConditionalCallback, learner)"},{"line":55,"file":"/home/runner/.julia/packages/FluxTraining/euBHk/src/callbacks/metrics.jl","method_id":"FluxTraining.init!_2","symbol_id":"FluxTraining.init!","filedoc":"sourcefiles/FluxTraining/src/callbacks/metrics.jl","signature":"init!(metrics::Metrics, learner)"},{"line":24,"file":"/home/runner/.julia/packages/FluxTraining/euBHk/src/callbacks/recorder.jl","method_id":"FluxTraining.init!_3","symbol_id":"FluxTraining.init!","filedoc":"sourcefiles/FluxTraining/src/callbacks/recorder.jl","signature":"init!(::Recorder, learner)"},{"line":45,"file":"/home/runner/.julia/packages/FluxTraining/euBHk/src/callbacks/scheduler.jl","method_id":"FluxTraining.init!_4","symbol_id":"FluxTraining.init!","filedoc":"sourcefiles/FluxTraining/src/callbacks/scheduler.jl","signature":"init!(scheduler::Scheduler, learner)"},{"line":274,"file":"/home/runner/.julia/packages/FluxTraining/euBHk/src/callbacks/callback.jl","method_id":"FluxTraining.init!_5","symbol_id":"FluxTraining.init!","filedoc":"sourcefiles/FluxTraining/src/callbacks/callback.jl","signature":"init!(::FluxTraining.SafeCallback, learner)"},{"line":11,"file":"/home/runner/.julia/packages/FluxTraining/euBHk/src/learner.jl","method_id":"FluxTraining.init!_6","symbol_id":"FluxTraining.init!","filedoc":"sourcefiles/FluxTraining/src/learner.jl","signature":"init!(cbs::FluxTraining.Callbacks, learner)"}],"name":"init!","title":"init!","symbol_id":"FluxTraining.init!","public":false,"module_id":"FluxTraining"},"tag":"documentation","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["init!(callback, learner)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Initialize a callback. Default is to do nothing."],"type":"node"},{"attributes":{},"tag":"h2","children":["Extending"],"type":"node"},{"attributes":{},"tag":"p","children":["To extend for a callback, implement ",{"attributes":{},"tag":"code","children":["init!(cb::MyCallback, learner)"],"type":"node"},". ",{"attributes":{},"tag":"code","children":["init!"],"type":"node"}," can set up internal state of a callback that depends on ",{"attributes":{},"tag":"code","children":["learner"],"type":"node"}," and can also initialize shared callback state in ",{"attributes":{},"tag":"code","children":["learner.cbstate"],"type":"node"},". Just like ",{"attributes":{},"tag":"code","children":["on"],"type":"node"}," event handlers, the state access permissions must be correctly defined using ",{"attributes":{"reftype":"symbol","document_id":"references/FluxTraining.stateaccess"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["stateaccess"],"type":"node"}],"type":"node"}," to do so."],"type":"node"},{"attributes":{},"tag":"p","children":[{"attributes":{},"tag":"code","children":["init!"],"type":"node"}," must also be idempotent, i.e. running it twice on the same ",{"attributes":{},"tag":"code","children":["Learner"],"type":"node"}," should have the same effect as runnning it once."],"type":"node"}],"type":"node"}],"type":"node"}